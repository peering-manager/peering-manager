[tool.poetry]
name = "Peering Manager"
description = "BGP sessions management tool"
version = "1.9.0-dev"
authors = ["Guillaume Mazoyer <pm@mazoyer.eu>"]
readme = "README.md"
license = "Apache-2.0"

[tool.poetry.urls]
homepage = "https://peering-manager.net"
documentation = "https://docs.peering-manager.net"
repository = "https://github.com/peering-manager/peering-manager.git"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
Django = ">=5.0,<5.1"
djangorestframework = "~3.15"
django-debug-toolbar = "~4.3"
django-filter = "~24.2"
django-netfields = "~1.3"
django-prometheus = "~2.3"
django-redis = "~5.4"
django-rq = "~2.10"
django-tables2 = "~2.7"
django-taggit = "~5.0"
drf-spectacular = "~0.27"
drf-spectacular-sidecar = "^2024"
dulwich = "~0.21"
Jinja2 = "~3.1"
Markdown = "~3.5"
napalm = "~5.0"
packaging = "23.2"
psycopg = { version = "~3.1", extras = ["binary", "pool"] }
pyixapi = "^0.2"
pynetbox = "~7.3"
PyYAML = "~6.0"
requests = "~2.32"
social-auth-app-django = "^5.4"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pre-commit = "~3.5"
ruff = "~0.4"
coverage = { version = "~7.4", extras = ["toml"] }

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs-material = "*"

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
ignore = [
    "C901",    # Is too complex
    "DJ001",   # Avoid using `null=True` on string-based fields such as `CharField`
    "E501",    # Line too long
    "F401",    # Imported but unused; consider using `importlib.util.find_spec` to test for availability
    "F403",    # Unable to detect undefined names
    "F405",    # May be undefined, or defined from star imports
    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used in comparison, consider replacing with a constant variable
    "UP024",   # Replace aliased errors with `OSError`
    "UP027",   # Replace unpacked list comprehension with a generator expression
    "UP032",   # Use f-string instead of `format` call
    "UP038",   # Use `X | Y` in `isinstance` call instead of `(X, Y)`
]
select = [
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "C90",  # mccabe complexity
    "DJ",   # flake8-django
    "DTZ",  # flake8-datetimez
    "E",    # pycodestyle errors
    "EXE",  # flake8-executable
    "F",    # pyflakes
    "I",    # isort-like checks
    "ICN",  # flake8-import-conventions
    "INP",  # flake8-no-pep420
    "N",    # pep8-naming
    "PIE",  # flake8-pie
    "PL",   # pylint
    "PTH",  # flake8-use-pathlib
    "PYI",  # flake8-pyi
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "TCH",  # flake8-type-checking
    "TRIO", # flake8-trio
    "T10",  # flake8-debugger
    "UP",   # pyupgrade
    "W",    # pycodestyle warnings
]

[tool.ruff.lint.per-file-ignores]
"*/migrations/*" = ["B007", "N805", "N806", "N999"]
"peering_manager/configuration.example.py" = ["N999"]
"peering_manager/saml2_config.example.py" = ["N999"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.coverage.run]
branch = true
source = ["."]
omit = [
    "manage.py",
    "*/apps.py",
    "*/migrations/*",
    "peering_manager/asgi.py",
    "peering_manager/wsgi.py",
    "peering_manager/settings.py",
    "peering_manager/configuration.*",
]
